in ./package.json
- added "proxy" for development ease shit

/server
- added npm install cors

1/12/23
- added npm install path to server.js for vercel deployment
- removed
  "proxy": "http://localhost:4000",
      - for vercel deployment

1/15/23
- added npm install date-fns --save to /client
=========
=========
for deploying

npm run build

+

for committing

git add .

git commit -m "Deployed website"

git push

=========
=========

$group aggregate
[
  {
    '$group': {
      '_id': '__v0', 
      'totalEntries': {
        '$count': {}
      }, 
      'avgPrice': {
        '$avg': '$number'
      }
    }
  }
]
// outputs total number of entries & avg number


shit to put:
- set timer after like 10 seconds
    - Tips: don't know? Take a look at some questions from similar batteries
    - click to show batteries
- allow to put your own localstorage when you come from phone to desktop  


  =====
  =====

  for hookMood's display localstorage data
  ==> https://github.com/HamzaAnwar1998/LocalStorage-with-React-Hooks-BookList-App/blob/main/src/App.js





=====+++++++
=====+++++++   BACKUPS

for /DataFetch
avg score:
                            {rainbow && rainbow.map((rainbow, index1) => (

                            <div className=" text-green-400 md:hover:text-yellow-200" key={index1}>
                                {/* <RainbowDetails key={rainbow._id} rainbow={rainbow} /> */}

                                {parseFloat(rainbow.avgPrice).toFixed(2)}
                            </div>

                        ))}

total entries:
                        {rainbow && rainbow.map((rainbow, index) => (

                        <div className=" md:text-red-900 md:hover:text-purple-600" key={index}>
                            {/* <RainbowDetails key={rainbow._id} rainbow={rainbow} /> */}
                            {rainbow.totalEntries}
                        </div>

                    ))}




// this one works for the array
 <div className=" max-md:m-auto max-md:pl-[80px] max-md:max-w-[400px] max-md:justify-center">
                {/* {list.filter((item,index) => index < 9 ).map((x, index) => */}
                {list.filter((item, index) => index < 9).map((x, index) => {
                // displays row of numbers from array
                    return (
                        <div  className='relative md:text-center md:inline-flex md:p-0
                         max-md:inline-flex max-md:-ml-10 max-md:-mr-10 max-md:p-0 max-md:flex-wrap
                                max-md:[&>button]:pt-8 max-md:[&>button]:pb-8 max-md:[&>button]:pl-10 max-md:[&>button]:pr-10
                        ' key={index}>
                            <button
                                className={booleanState ?
                                    "invisible"
                                    :
                                    " squares ratingAnimation md:mr-[8px] md:ml-[8px] btn btn-light bg-white btn-lg"}
                                selectnums={x.num}
                                onClick={selectHandler}
                                // key={index}
                            >
                        {x.num}
                            </button>

                        {/* after click, display chosen number */}
                        <button className={booleanState ? "squares btn btn-light btn-lg ratingAnimation max-md:-ml-[134px] max-md:mt-[50px]" : 'invisible'}>{number}</button>
                            {/* <button removeNums={x.num} onClick={removeHandler}>x</button> */}
                        </div>
                    )
                })}
            </div>



///
            font-extrabold text-transparent text-xl bg-gradient-to-r from-purple-500 to-green-400



//// not working

                {/* {booleanState ?
                    <>
                            {destroyer ?
                                null
                                :
                                <>
                                                    <button className='bg-black font-bold tracking-wider absolute top-[50%] -translate-y-1/2 text-white pt-2 pb-2 pr-8 pl-8'>Submit</button>
                                    {error && { error }}</>
                            }
                    </>
                    :
                    <button disabled="true" className='bg-black font-bold tracking-wider absolute top-[50%] -translate-y-1/2 text-white pt-2 pb-2 pr-8 pl-8'>Submit</button>
                    
                    } */}



TopNav.js topLeft blue sun
                <svg xmlns="http://www.w3.org/2000/svg" width="100" fill="currentColor" 
            className="bi bi-brightness-high max-md:invisible hover:text-white text-[#1D4ED8]
            " 
            viewBox="0 0 16 16">
  <path d="M8 11a3 3 0 1 1 0-6 3 3 0 0 1 0 6zm0 1a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z"/>
</svg>

TopNav.js mobile blue OLD
                {/* max-md:absolute max-md:-left-[70px] max-md:top-0 */}
                {/* <ul className=' md:hidden
                text-black [&>*]:font-semibold tracking-tight
              
                '> */}
                {/* <Link className='no-underline bg-yellow-500' to="/rainbow2"><li>rainbow2</li></Link>
                <Link className='no-underline bg-purple-300' to="/rainbow3"><li>rainbow3</li></Link> */}


                {/* <Link className='no-underline 
                    md:text-red-800 md:rounded-3xl md:bg-purple-300 md:pt-6 md:pb-10 md:hover:bg-white md:hover:text-red-200
                    max-md:absolute max-md:ml-20 max-md:pl-8 max-md:pr-12 max-md:text-white
                    '
                        to="/" >
                        <li>Rainbow</li></Link> */}
                {/* <li>
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                            className="bi bi-slash-lg opacity-0 "
                            viewBox="0 0 16 16">
                            <path fillRule="evenodd" d="M13.854 2.146a.5.5 0 0 1 0 .708l-11 11a.5.5 0 0 1-.708-.708l11-11a.5.5 0 0 1 .708 0Z" />
                        </svg>
                    </li> */}
                {/* <Link className='
                    no-underline md:bg-red-500 md:pt-6 md:pb-10 md:hover:bg-green-500 hover:text-black
                    max-md:absolute max-md:-mt-[40px] max-md:-pl-0 max-md:pr-0 max-md:ml-[200px]
                    '
                        to="/darkness"><li>Darkness</li></Link> */}
                {/* <Link className='no-underline bg-yellow-500 pt-4 pb-10 hover:bg-black hover:text-black' to="/darkness"><li>Darkness</li></Link> */}
                {/* </ul> */}